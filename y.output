Terminals unused in grammar

    DO
    SWITCH
    DEFAULT
    BREAK
    CHAR
    DOUBLE
    CASE
    CONTINUE
    CONST_CHAR
    STRING
    COMMENT


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 $@1: %empty

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 SEMICOLON

    9 $@2: %empty

   10 func_declaration: type_specifier ID LPAREN RPAREN $@2 SEMICOLON
   11                 | type_specifier ID LPAREN parameter_list RPAREN error
   12                 | type_specifier ID LPAREN RPAREN error

   13 $@3: %empty

   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 compound_statement

   15 $@4: %empty

   16 func_definition: type_specifier ID LPAREN RPAREN $@4 compound_statement

   17 parameter_list: parameter_list COMMA type_specifier ID
   18               | parameter_list COMMA type_specifier
   19               | type_specifier ID
   20               | type_specifier
   21               | type_specifier error
   22               | parameter_list COMMA type_specifier error

   23 $@5: %empty

   24 compound_statement: LCURL $@5 statements RCURL

   25 $@6: %empty

   26 compound_statement: LCURL $@6 RCURL

   27 var_declaration: type_specifier declaration_list SEMICOLON

   28 type_specifier: INT
   29               | FLOAT
   30               | VOID

   31 declaration_list: declaration_list COMMA ID
   32                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   33                 | ID
   34                 | ID LTHIRD CONST_INT RTHIRD
   35                 | declaration_list error COMMA ID

   36 statements: statement
   37           | statements statement
   38           | statements error
   39           | error

   40 statement: var_declaration
   41          | func_declaration
   42          | func_definition
   43          | expression_statement
   44          | compound_statement
   45          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   46          | IF LPAREN expression RPAREN statement
   47          | IF LPAREN expression RPAREN statement ELSE statement
   48          | WHILE LPAREN expression RPAREN statement
   49          | PRINTLN LPAREN ID RPAREN SEMICOLON
   50          | RETURN expression SEMICOLON

   51 expression_statement: SEMICOLON
   52                     | expression SEMICOLON

   53 variable: ID
   54         | ID LTHIRD expression RTHIRD

   55 expression: logic_expression
   56           | variable ASSIGNOP logic_expression

   57 logic_expression: rel_expression
   58                 | rel_expression LOGICOP rel_expression

   59 rel_expression: simple_expression
   60               | simple_expression RELOP simple_expression

   61 simple_expression: term
   62                  | simple_expression ADDOP term

   63 term: unary_expression
   64     | term MULOP unary_expression

   65 unary_expression: ADDOP unary_expression
   66                 | NOT unary_expression
   67                 | factor

   68 factor: variable
   69       | ID LPAREN argument_list RPAREN
   70       | LPAREN expression RPAREN
   71       | CONST_INT
   72       | CONST_FLOAT
   73       | variable INCOP
   74       | variable DECOP
   75       | WRONG_FLOAT

   76 argument_list: arguments
   77              | %empty

   78 arguments: arguments COMMA logic_expression
   79          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256) 11 12 21 22 35 38 39
    IF <symbolinfo> (258) 46 47
    FOR <symbolinfo> (259) 45
    DO <symbolinfo> (260)
    INT <symbolinfo> (261) 28
    FLOAT <symbolinfo> (262) 29
    VOID <symbolinfo> (263) 30
    SWITCH <symbolinfo> (264)
    DEFAULT <symbolinfo> (265)
    ELSE <symbolinfo> (266) 47
    WHILE <symbolinfo> (267) 48
    BREAK <symbolinfo> (268)
    CHAR <symbolinfo> (269)
    DOUBLE <symbolinfo> (270)
    RETURN <symbolinfo> (271) 50
    CASE <symbolinfo> (272)
    CONTINUE <symbolinfo> (273)
    CONST_INT <symbolinfo> (274) 32 34 71
    CONST_FLOAT <symbolinfo> (275) 72
    CONST_CHAR <symbolinfo> (276)
    INCOP <symbolinfo> (277) 73
    ADDOP <symbolinfo> (278) 62 65
    MULOP <symbolinfo> (279) 64
    RELOP <symbolinfo> (280) 60
    ASSIGNOP <symbolinfo> (281) 56
    LOGICOP <symbolinfo> (282) 58
    NOT <symbolinfo> (283) 66
    LPAREN <symbolinfo> (284) 8 10 11 12 14 16 45 46 47 48 49 69 70
    RPAREN <symbolinfo> (285) 8 10 11 12 14 16 45 46 47 48 49 69 70
    LCURL <symbolinfo> (286) 24 26
    RCURL <symbolinfo> (287) 24 26
    LTHIRD <symbolinfo> (288) 32 34 54
    RTHIRD <symbolinfo> (289) 32 34 54
    COMMA <symbolinfo> (290) 17 18 22 31 32 35 78
    SEMICOLON <symbolinfo> (291) 8 10 27 49 50 51 52
    ID <symbolinfo> (292) 8 10 11 12 14 16 17 19 31 32 33 34 35 49 53 54 69
    STRING <symbolinfo> (293)
    COMMENT <symbolinfo> (294)
    PRINTLN <symbolinfo> (295) 49
    DECOP <symbolinfo> (296) 74
    WRONG_FLOAT <symbolinfo> (297) 75
    LOWER_THAN_ELSE (298)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    start (45)
        on left: 1
        on right: 0
    program <symbolinfo> (46)
        on left: 2 3
        on right: 1 2
    unit <symbolinfo> (47)
        on left: 4 5 6
        on right: 2 3
    func_declaration <symbolinfo> (48)
        on left: 8 10 11 12
        on right: 5 41
    $@1 (49)
        on left: 7
        on right: 8
    $@2 (50)
        on left: 9
        on right: 10
    func_definition <symbolinfo> (51)
        on left: 14 16
        on right: 6 42
    $@3 (52)
        on left: 13
        on right: 14
    $@4 (53)
        on left: 15
        on right: 16
    parameter_list <symbolinfo> (54)
        on left: 17 18 19 20 21 22
        on right: 8 11 14 17 18 22
    compound_statement <symbolinfo> (55)
        on left: 24 26
        on right: 14 16 44
    $@5 (56)
        on left: 23
        on right: 24
    $@6 (57)
        on left: 25
        on right: 26
    var_declaration <symbolinfo> (58)
        on left: 27
        on right: 4 40
    type_specifier <symbolinfo> (59)
        on left: 28 29 30
        on right: 8 10 11 12 14 16 17 18 19 20 21 22 27
    declaration_list <symbolinfo> (60)
        on left: 31 32 33 34 35
        on right: 27 31 32 35
    statements <symbolinfo> (61)
        on left: 36 37 38 39
        on right: 24 37 38
    statement <symbolinfo> (62)
        on left: 40 41 42 43 44 45 46 47 48 49 50
        on right: 36 37 45 46 47 48
    expression_statement <symbolinfo> (63)
        on left: 51 52
        on right: 43 45
    variable <symbolinfo> (64)
        on left: 53 54
        on right: 56 68 73 74
    expression <symbolinfo> (65)
        on left: 55 56
        on right: 45 46 47 48 50 52 54 70
    logic_expression <symbolinfo> (66)
        on left: 57 58
        on right: 55 56 78 79
    rel_expression <symbolinfo> (67)
        on left: 59 60
        on right: 57 58
    simple_expression <symbolinfo> (68)
        on left: 61 62
        on right: 59 60 62
    term <symbolinfo> (69)
        on left: 63 64
        on right: 61 62 64
    unary_expression <symbolinfo> (70)
        on left: 65 66 67
        on right: 63 64 65 66
    factor <symbolinfo> (71)
        on left: 68 69 70 71 72 73 74 75
        on right: 67
    argument_list <symbolinfo> (72)
        on left: 76 77
        on right: 69
    arguments <symbolinfo> (73)
        on left: 78 79
        on right: 76 78


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   28 type_specifier: INT .

    $default  reduce using rule 28 (type_specifier)


State 2

   29 type_specifier: FLOAT .

    $default  reduce using rule 29 (type_specifier)


State 3

   30 type_specifier: VOID .

    $default  reduce using rule 30 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    8 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier . ID LPAREN RPAREN $@2 SEMICOLON
   11                 | type_specifier . ID LPAREN parameter_list RPAREN error
   12                 | type_specifier . ID LPAREN RPAREN error
   14 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@3 compound_statement
   16                | type_specifier . ID LPAREN RPAREN $@4 compound_statement
   27 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    8 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier ID . LPAREN RPAREN $@2 SEMICOLON
   11                 | type_specifier ID . LPAREN parameter_list RPAREN error
   12                 | type_specifier ID . LPAREN RPAREN error
   14 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@3 compound_statement
   16                | type_specifier ID . LPAREN RPAREN $@4 compound_statement
   33 declaration_list: ID .
   34                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 33 (declaration_list)


State 14

   27 var_declaration: type_specifier declaration_list . SEMICOLON
   31 declaration_list: declaration_list . COMMA ID
   32                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD
   35                 | declaration_list . error COMMA ID

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 15

    8 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier ID LPAREN . RPAREN $@2 SEMICOLON
   11                 | type_specifier ID LPAREN . parameter_list RPAREN error
   12                 | type_specifier ID LPAREN . RPAREN error
   14 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@3 compound_statement
   16                | type_specifier ID LPAREN . RPAREN $@4 compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 20

    parameter_list  go to state 21
    type_specifier  go to state 22


State 16

   34 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 23


State 17

   35 declaration_list: declaration_list error . COMMA ID

    COMMA  shift, and go to state 24


State 18

   31 declaration_list: declaration_list COMMA . ID
   32                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 25


State 19

   27 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 27 (var_declaration)


State 20

   10 func_declaration: type_specifier ID LPAREN RPAREN . $@2 SEMICOLON
   12                 | type_specifier ID LPAREN RPAREN . error
   16 func_definition: type_specifier ID LPAREN RPAREN . $@4 compound_statement

    error  shift, and go to state 26

    LCURL      reduce using rule 15 ($@4)
    SEMICOLON  reduce using rule 9 ($@2)

    $@2  go to state 27
    $@4  go to state 28


State 21

    8 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN $@1 SEMICOLON
   11                 | type_specifier ID LPAREN parameter_list . RPAREN error
   14 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@3 compound_statement
   17 parameter_list: parameter_list . COMMA type_specifier ID
   18               | parameter_list . COMMA type_specifier
   22               | parameter_list . COMMA type_specifier error

    RPAREN  shift, and go to state 29
    COMMA   shift, and go to state 30


State 22

   19 parameter_list: type_specifier . ID
   20               | type_specifier .
   21               | type_specifier . error

    error  shift, and go to state 31
    ID     shift, and go to state 32

    RPAREN  reduce using rule 20 (parameter_list)
    COMMA   reduce using rule 20 (parameter_list)


State 23

   34 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 33


State 24

   35 declaration_list: declaration_list error COMMA . ID

    ID  shift, and go to state 34


State 25

   31 declaration_list: declaration_list COMMA ID .
   32                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 35

    $default  reduce using rule 31 (declaration_list)


State 26

   12 func_declaration: type_specifier ID LPAREN RPAREN error .

    $default  reduce using rule 12 (func_declaration)


State 27

   10 func_declaration: type_specifier ID LPAREN RPAREN $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 36


State 28

   16 func_definition: type_specifier ID LPAREN RPAREN $@4 . compound_statement

    LCURL  shift, and go to state 37

    compound_statement  go to state 38


State 29

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . $@1 SEMICOLON
   11                 | type_specifier ID LPAREN parameter_list RPAREN . error
   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@3 compound_statement

    error  shift, and go to state 39

    LCURL      reduce using rule 13 ($@3)
    SEMICOLON  reduce using rule 7 ($@1)

    $@1  go to state 40
    $@3  go to state 41


State 30

   17 parameter_list: parameter_list COMMA . type_specifier ID
   18               | parameter_list COMMA . type_specifier
   22               | parameter_list COMMA . type_specifier error

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 42


State 31

   21 parameter_list: type_specifier error .

    $default  reduce using rule 21 (parameter_list)


State 32

   19 parameter_list: type_specifier ID .

    $default  reduce using rule 19 (parameter_list)


State 33

   34 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 34 (declaration_list)


State 34

   35 declaration_list: declaration_list error COMMA ID .

    $default  reduce using rule 35 (declaration_list)


State 35

   32 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 43


State 36

   10 func_declaration: type_specifier ID LPAREN RPAREN $@2 SEMICOLON .

    $default  reduce using rule 10 (func_declaration)


State 37

   24 compound_statement: LCURL . $@5 statements RCURL
   26                   | LCURL . $@6 RCURL

    RCURL     reduce using rule 25 ($@6)
    $default  reduce using rule 23 ($@5)

    $@5  go to state 44
    $@6  go to state 45


State 38

   16 func_definition: type_specifier ID LPAREN RPAREN $@4 compound_statement .

    $default  reduce using rule 16 (func_definition)


State 39

   11 func_declaration: type_specifier ID LPAREN parameter_list RPAREN error .

    $default  reduce using rule 11 (func_declaration)


State 40

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 41

   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 . compound_statement

    LCURL  shift, and go to state 37

    compound_statement  go to state 47


State 42

   17 parameter_list: parameter_list COMMA type_specifier . ID
   18               | parameter_list COMMA type_specifier .
   22               | parameter_list COMMA type_specifier . error

    error  shift, and go to state 48
    ID     shift, and go to state 49

    RPAREN  reduce using rule 18 (parameter_list)
    COMMA   reduce using rule 18 (parameter_list)


State 43

   32 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 50


State 44

   24 compound_statement: LCURL $@5 . statements RCURL

    error        shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 54
    RETURN       shift, and go to state 55
    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    PRINTLN      shift, and go to state 63
    WRONG_FLOAT  shift, and go to state 64

    func_declaration      go to state 65
    func_definition       go to state 66
    compound_statement    go to state 67
    var_declaration       go to state 68
    type_specifier        go to state 10
    statements            go to state 69
    statement             go to state 70
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 45

   26 compound_statement: LCURL $@6 . RCURL

    RCURL  shift, and go to state 80


State 46

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 47

   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 compound_statement .

    $default  reduce using rule 14 (func_definition)


State 48

   22 parameter_list: parameter_list COMMA type_specifier error .

    $default  reduce using rule 22 (parameter_list)


State 49

   17 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 17 (parameter_list)


State 50

   32 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 32 (declaration_list)


State 51

   39 statements: error .

    $default  reduce using rule 39 (statements)


State 52

   46 statement: IF . LPAREN expression RPAREN statement
   47          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 81


State 53

   45 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 82


State 54

   48 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 83


State 55

   50 statement: RETURN . expression SEMICOLON

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 72
    expression         go to state 84
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 56

   71 factor: CONST_INT .

    $default  reduce using rule 71 (factor)


State 57

   72 factor: CONST_FLOAT .

    $default  reduce using rule 72 (factor)


State 58

   65 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable          go to state 85
    unary_expression  go to state 86
    factor            go to state 79


State 59

   66 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable          go to state 85
    unary_expression  go to state 87
    factor            go to state 79


State 60

   70 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 72
    expression         go to state 88
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 61

   51 expression_statement: SEMICOLON .

    $default  reduce using rule 51 (expression_statement)


State 62

   53 variable: ID .
   54         | ID . LTHIRD expression RTHIRD
   69 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 89
    LTHIRD  shift, and go to state 90

    $default  reduce using rule 53 (variable)


State 63

   49 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 91


State 64

   75 factor: WRONG_FLOAT .

    $default  reduce using rule 75 (factor)


State 65

   41 statement: func_declaration .

    $default  reduce using rule 41 (statement)


State 66

   42 statement: func_definition .

    $default  reduce using rule 42 (statement)


State 67

   44 statement: compound_statement .

    $default  reduce using rule 44 (statement)


State 68

   40 statement: var_declaration .

    $default  reduce using rule 40 (statement)


State 69

   24 compound_statement: LCURL $@5 statements . RCURL
   37 statements: statements . statement
   38           | statements . error

    error        shift, and go to state 92
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 54
    RETURN       shift, and go to state 55
    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 37
    RCURL        shift, and go to state 93
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    PRINTLN      shift, and go to state 63
    WRONG_FLOAT  shift, and go to state 64

    func_declaration      go to state 65
    func_definition       go to state 66
    compound_statement    go to state 67
    var_declaration       go to state 68
    type_specifier        go to state 10
    statement             go to state 94
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 70

   36 statements: statement .

    $default  reduce using rule 36 (statements)


State 71

   43 statement: expression_statement .

    $default  reduce using rule 43 (statement)


State 72

   56 expression: variable . ASSIGNOP logic_expression
   68 factor: variable .
   73       | variable . INCOP
   74       | variable . DECOP

    INCOP     shift, and go to state 95
    ASSIGNOP  shift, and go to state 96
    DECOP     shift, and go to state 97

    $default  reduce using rule 68 (factor)


State 73

   52 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 74

   55 expression: logic_expression .

    $default  reduce using rule 55 (expression)


State 75

   57 logic_expression: rel_expression .
   58                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 99

    $default  reduce using rule 57 (logic_expression)


State 76

   59 rel_expression: simple_expression .
   60               | simple_expression . RELOP simple_expression
   62 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 100
    RELOP  shift, and go to state 101

    $default  reduce using rule 59 (rel_expression)


State 77

   61 simple_expression: term .
   64 term: term . MULOP unary_expression

    MULOP  shift, and go to state 102

    $default  reduce using rule 61 (simple_expression)


State 78

   63 term: unary_expression .

    $default  reduce using rule 63 (term)


State 79

   67 unary_expression: factor .

    $default  reduce using rule 67 (unary_expression)


State 80

   26 compound_statement: LCURL $@6 RCURL .

    $default  reduce using rule 26 (compound_statement)


State 81

   46 statement: IF LPAREN . expression RPAREN statement
   47          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 72
    expression         go to state 103
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 82

   45 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    expression_statement  go to state 104
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 83

   48 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 72
    expression         go to state 105
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 84

   50 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 85

   68 factor: variable .
   73       | variable . INCOP
   74       | variable . DECOP

    INCOP  shift, and go to state 95
    DECOP  shift, and go to state 97

    $default  reduce using rule 68 (factor)


State 86

   65 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 65 (unary_expression)


State 87

   66 unary_expression: NOT unary_expression .

    $default  reduce using rule 66 (unary_expression)


State 88

   70 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 107


State 89

   69 factor: ID LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    $default  reduce using rule 77 (argument_list)

    variable           go to state 85
    logic_expression   go to state 108
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79
    argument_list      go to state 109
    arguments          go to state 110


State 90

   54 variable: ID LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 72
    expression         go to state 111
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 91

   49 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 112


State 92

   38 statements: statements error .

    $default  reduce using rule 38 (statements)


State 93

   24 compound_statement: LCURL $@5 statements RCURL .

    $default  reduce using rule 24 (compound_statement)


State 94

   37 statements: statements statement .

    $default  reduce using rule 37 (statements)


State 95

   73 factor: variable INCOP .

    $default  reduce using rule 73 (factor)


State 96

   56 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 85
    logic_expression   go to state 113
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 97

   74 factor: variable DECOP .

    $default  reduce using rule 74 (factor)


State 98

   52 expression_statement: expression SEMICOLON .

    $default  reduce using rule 52 (expression_statement)


State 99

   58 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 85
    rel_expression     go to state 114
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 100

   62 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable          go to state 85
    term              go to state 115
    unary_expression  go to state 78
    factor            go to state 79


State 101

   60 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 85
    simple_expression  go to state 116
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 102

   64 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable          go to state 85
    unary_expression  go to state 117
    factor            go to state 79


State 103

   46 statement: IF LPAREN expression . RPAREN statement
   47          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 118


State 104

   45 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    expression_statement  go to state 119
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 105

   48 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 120


State 106

   50 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 50 (statement)


State 107

   70 factor: LPAREN expression RPAREN .

    $default  reduce using rule 70 (factor)


State 108

   79 arguments: logic_expression .

    $default  reduce using rule 79 (arguments)


State 109

   69 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 121


State 110

   76 argument_list: arguments .
   78 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 122

    $default  reduce using rule 76 (argument_list)


State 111

   54 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 123


State 112

   49 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 124


State 113

   56 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 56 (expression)


State 114

   58 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 58 (logic_expression)


State 115

   62 simple_expression: simple_expression ADDOP term .
   64 term: term . MULOP unary_expression

    MULOP  shift, and go to state 102

    $default  reduce using rule 62 (simple_expression)


State 116

   60 rel_expression: simple_expression RELOP simple_expression .
   62 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 100

    $default  reduce using rule 60 (rel_expression)


State 117

   64 term: term MULOP unary_expression .

    $default  reduce using rule 64 (term)


State 118

   46 statement: IF LPAREN expression RPAREN . statement
   47          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 54
    RETURN       shift, and go to state 55
    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    PRINTLN      shift, and go to state 63
    WRONG_FLOAT  shift, and go to state 64

    func_declaration      go to state 65
    func_definition       go to state 66
    compound_statement    go to state 67
    var_declaration       go to state 68
    type_specifier        go to state 10
    statement             go to state 125
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 119

   45 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 72
    expression         go to state 126
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 120

   48 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 54
    RETURN       shift, and go to state 55
    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    PRINTLN      shift, and go to state 63
    WRONG_FLOAT  shift, and go to state 64

    func_declaration      go to state 65
    func_definition       go to state 66
    compound_statement    go to state 67
    var_declaration       go to state 68
    type_specifier        go to state 10
    statement             go to state 127
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 121

   69 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 69 (factor)


State 122

   78 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    ID           shift, and go to state 62
    WRONG_FLOAT  shift, and go to state 64

    variable           go to state 85
    logic_expression   go to state 128
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


State 123

   54 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 54 (variable)


State 124

   49 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 125

   46 statement: IF LPAREN expression RPAREN statement .
   47          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 130

    $default  reduce using rule 46 (statement)


State 126

   45 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 131


State 127

   48 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 48 (statement)


State 128

   78 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 78 (arguments)


State 129

   49 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 49 (statement)


State 130

   47 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 54
    RETURN       shift, and go to state 55
    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    PRINTLN      shift, and go to state 63
    WRONG_FLOAT  shift, and go to state 64

    func_declaration      go to state 65
    func_definition       go to state 66
    compound_statement    go to state 67
    var_declaration       go to state 68
    type_specifier        go to state 10
    statement             go to state 132
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 131

   45 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 54
    RETURN       shift, and go to state 55
    CONST_INT    shift, and go to state 56
    CONST_FLOAT  shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 61
    ID           shift, and go to state 62
    PRINTLN      shift, and go to state 63
    WRONG_FLOAT  shift, and go to state 64

    func_declaration      go to state 65
    func_definition       go to state 66
    compound_statement    go to state 67
    var_declaration       go to state 68
    type_specifier        go to state 10
    statement             go to state 133
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


State 132

   47 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 47 (statement)


State 133

   45 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 45 (statement)

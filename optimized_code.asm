.MODEL SMALL
.STACK 100H;initialize model and stack size
.DATA
a1_1 DW  ?; line no: 2
t0 DW  ?
a1_2 DW  ?; line no: 7
b1_2 DW  ?; line no: 7
x1_2 DW  ?; line no: 7
t1 DW  ?
t2 DW  ?
t3 DW  ?
a1_3 DW  ?; line no: 13
b1_3 DW  ?; line no: 13
t4 DW  ?


.CODE




PRINTLN PROC
MOV DX,0
PUSH DX
MOV CX,1
SHL CX,15
AND CX,BX
CMP CX,0
JE START
MOV DL,45
MOV AH,2
INT 21H
NEG BX
START:
MOV AX,BX
MOV DX,0
MOV CX,10
DIV CX
MOV BX,AX
ADD DX,30H 
PUSH DX
CMP BX,0
JE EXIT
JMP START
EXIT:
STARTPRINT:
POP DX
CMP DX,0
JE ENDPRINT 
MOV AH,2
INT 21H
JMP STARTPRINT
ENDPRINT:MOV DL,13
INT 21H
MOV DL,10
INT 21H
RET  
PRINTLN ENDP


f PROC
POP BX
POP AX
MOV a1_1,AX
PUSH BX
;return 2*a;




MOV AX,2
MOV BX,a1_1
IMUL BX


MOV t0,AX


POP BX
MOV AX,t0
PUSH AX
PUSH BX
RET


;a=9;




MOV AX,9
MOV a1_1,AX


f ENDP


g PROC
POP BX
POP AX
MOV b1_2,AX
POP AX
MOV a1_2,AX
PUSH BX
;int x;


;x=f(a)+a+b;




MOV AX,a1_2
PUSH AX


CALL f
POP AX
MOV t1, AX




MOV BX,a1_2
ADD AX,BX
MOV t2,AX




MOV BX,b1_2
ADD AX,BX
MOV t3,AX


MOV x1_2,AX


;return x;


POP BX
MOV AX,x1_2
PUSH AX
PUSH BX
RET




g ENDP


main PROC
MOV AX,@DATA
MOV DS,AX;int a,b;


;a=1;




MOV AX,1
MOV a1_3,AX


;b=2;




MOV AX,2
MOV b1_3,AX


;a=g(a,b);




MOV AX,a1_3
PUSH AX


MOV AX,b1_3
PUSH AX


CALL g
POP AX
MOV t4, AX


MOV a1_3,AX


;println(a);


MOV BX,a1_3
CALL PRINTLN




;return 0;




MOV AH,4CH
INT 21H
main ENDP


END MAIN

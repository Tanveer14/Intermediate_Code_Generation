Line 1: type_specifier : INT

int

Line 2: type_specifier : INT

int

Line 2:  declaration_list : ID

a

Line 2: declaration_list : declaration_list COMMA ID

a,b

Line 2: declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

a,b,c[3]

Line 2: var_declaration : type_specifier declaration_list SEMICOLON

int a,b,c[3];

Line 2: statement : var_declaration

int a,b,c[3];

Line 2: statements : statement

int a,b,c[3];

Line 3: variable : ID

a

Line 3: factor : CONST_INT

1

Line 3: unary_expression : factor

1

Line 3: term : unary_expression

1

Line 3: factor : CONST_INT

2

Line 3: unary_expression : factor

2

Line 3: term : unary_expression

2

Line 3: simple_expression : term

2

Line 3: factor : CONST_INT

3

Line 3: unary_expression : factor

3

Line 3: term : unary_expression

3

Line 3: simple_expression : simple_expression ADDOP term

2+3

Line 3: rel_expression : simple_expression

2+3

Line 3: logic_expression : rel_expression

2+3

Line 3: expression : logic_expression

2+3

Line 3: factor : LPAREN expression RPAREN

(2+3)

Line 3: unary_expression : factor

(2+3)

Line 3: term : term MULOP unary_expression

1*(2+3)

Line 3: factor : CONST_INT

3

Line 3: unary_expression : factor

3

Line 3: term : term MULOP unary_expression

1*(2+3)%3

Line 3: simple_expression : term

1*(2+3)%3

Line 3: rel_expression : simple_expression

1*(2+3)%3

Line 3: logic_expression : rel_expression

1*(2+3)%3

Line 3: expression : variable ASSIGNOP logic_expression

a=1*(2+3)%3

Line 3: expression_statement : expression SEMICOLON

a=1*(2+3)%3;

Line 3: statement : expression_statement

a=1*(2+3)%3;

Line 3: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;

Line 4: variable : ID

b

Line 4: factor : CONST_INT

1

Line 4: unary_expression : factor

1

Line 4: term : unary_expression

1

Line 4: simple_expression : term

1

Line 4: factor : CONST_INT

5

Line 4: unary_expression : factor

5

Line 4: term : unary_expression

5

Line 4: simple_expression : term

5

Line 4: rel_expression : simple_expression RELOP simple_expression

1<5

Line 4: logic_expression : rel_expression

1<5

Line 4: expression : variable ASSIGNOP logic_expression

b=1<5

Line 4: expression_statement : expression SEMICOLON

b=1<5;

Line 4: statement : expression_statement

b=1<5;

Line 4: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;

Line 5: factor : CONST_INT

0

Line 5: unary_expression : factor

0

Line 5: term : unary_expression

0

Line 5: simple_expression : term

0

Line 5: rel_expression : simple_expression

0

Line 5: logic_expression : rel_expression

0

Line 5: expression : logic_expression

0

Line 5: variable : ID LTHIRD expression RTHIRD

c[0]

Line 5: factor : CONST_INT

20

Line 5: unary_expression : factor

20

Line 5: term : unary_expression

20

Line 5: simple_expression : term

20

Line 5: rel_expression : simple_expression

20

Line 5: logic_expression : rel_expression

20

Line 5: expression : variable ASSIGNOP logic_expression

c[0]=20

Line 5: expression_statement : expression SEMICOLON

c[0]=20;

Line 5: statement : expression_statement

c[0]=20;

Line 5: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;

Line 6: factor : CONST_INT

1

Line 6: unary_expression : factor

1

Line 6: term : unary_expression

1

Line 6: simple_expression : term

1

Line 6: rel_expression : simple_expression

1

Line 6: logic_expression : rel_expression

1

Line 6: expression : logic_expression

1

Line 6: variable : ID LTHIRD expression RTHIRD

c[1]

Line 6: factor : CONST_INT

10

Line 6: unary_expression : factor

10

Line 6: term : unary_expression

10

Line 6: simple_expression : term

10

Line 6: rel_expression : simple_expression

10

Line 6: logic_expression : rel_expression

10

Line 6: expression : variable ASSIGNOP logic_expression

c[1]=10

Line 6: expression_statement : expression SEMICOLON

c[1]=10;

Line 6: statement : expression_statement

c[1]=10;

Line 6: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;

Line 7: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(a);

Line 7: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);

Line 8: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(b);

Line 8: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);

Line 9: variable : ID

a

Line 9: factor: variable

a

Line 9: unary_expression : factor

a

Line 9: term : unary_expression

a

Line 9: simple_expression : term

a

Line 9: rel_expression : simple_expression

a

Line 9: variable : ID

b

Line 9: factor: variable

b

Line 9: unary_expression : factor

b

Line 9: term : unary_expression

b

Line 9: simple_expression : term

b

Line 9: rel_expression : simple_expression

b

Line 9: logic_expression : rel_expression LOGICOP rel_expression

a&&b

Line 9: expression : logic_expression

a&&b

Line 10: factor : CONST_INT

0

Line 10: unary_expression : factor

0

Line 10: term : unary_expression

0

Line 10: simple_expression : term

0

Line 10: rel_expression : simple_expression

0

Line 10: logic_expression : rel_expression

0

Line 10: expression : logic_expression

0

Line 10: variable : ID LTHIRD expression RTHIRD

c[0]

Line 10: factor : variable INCOP

c[0]++

Line 10: unary_expression : factor

c[0]++

Line 10: term : unary_expression

c[0]++

Line 10: simple_expression : term

c[0]++

Line 10: rel_expression : simple_expression

c[0]++

Line 10: logic_expression : rel_expression

c[0]++

Line 10: expression : logic_expression

c[0]++

Line 10: expression_statement : expression SEMICOLON

c[0]++;

Line 10: statement : expression_statement

c[0]++;

Line 12: factor : CONST_INT

1

Line 12: unary_expression : factor

1

Line 12: term : unary_expression

1

Line 12: simple_expression : term

1

Line 12: rel_expression : simple_expression

1

Line 12: logic_expression : rel_expression

1

Line 12: expression : logic_expression

1

Line 12: variable : ID LTHIRD expression RTHIRD

c[1]

Line 12: factor : CONST_INT

0

Line 12: unary_expression : factor

0

Line 12: term : unary_expression

0

Line 12: simple_expression : term

0

Line 12: rel_expression : simple_expression

0

Line 12: logic_expression : rel_expression

0

Line 12: expression : logic_expression

0

Line 12: variable : ID LTHIRD expression RTHIRD

c[0]

Line 12: factor: variable

c[0]

Line 12: unary_expression : factor

c[0]

Line 12: term : unary_expression

c[0]

Line 12: simple_expression : term

c[0]

Line 12: rel_expression : simple_expression

c[0]

Line 12: logic_expression : rel_expression

c[0]

Line 12: expression : variable ASSIGNOP logic_expression

c[1]=c[0]

Line 12: expression_statement : expression SEMICOLON

c[1]=c[0];

Line 12: statement : expression_statement

c[1]=c[0];

Line 12: statement : IF LPAREN expression RPAREN statement ELSE statement

if(a&&b)c[0]++;else
c[1]=c[0];

Line 12: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];

Line 14: variable : ID

a

Line 14: factor : CONST_INT

0

Line 14: unary_expression : factor

0

Line 14: term : unary_expression

0

Line 14: simple_expression : term

0

Line 14: rel_expression : simple_expression

0

Line 14: logic_expression : rel_expression

0

Line 14: expression : logic_expression

0

Line 14: variable : ID LTHIRD expression RTHIRD

c[0]

Line 14: factor: variable

c[0]

Line 14: unary_expression : factor

c[0]

Line 14: term : unary_expression

c[0]

Line 14: simple_expression : term

c[0]

Line 14: rel_expression : simple_expression

c[0]

Line 14: logic_expression : rel_expression

c[0]

Line 14: expression : variable ASSIGNOP logic_expression

a=c[0]

Line 14: expression_statement : expression SEMICOLON

a=c[0];

Line 14: statement : expression_statement

a=c[0];

Line 14: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];

Line 15: variable : ID

b

Line 15: factor : CONST_INT

1

Line 15: unary_expression : factor

1

Line 15: term : unary_expression

1

Line 15: simple_expression : term

1

Line 15: rel_expression : simple_expression

1

Line 15: logic_expression : rel_expression

1

Line 15: expression : logic_expression

1

Line 15: variable : ID LTHIRD expression RTHIRD

c[1]

Line 15: factor: variable

c[1]

Line 15: unary_expression : factor

c[1]

Line 15: term : unary_expression

c[1]

Line 15: simple_expression : term

c[1]

Line 15: rel_expression : simple_expression

c[1]

Line 15: logic_expression : rel_expression

c[1]

Line 15: expression : variable ASSIGNOP logic_expression

b=c[1]

Line 15: expression_statement : expression SEMICOLON

b=c[1];

Line 15: statement : expression_statement

b=c[1];

Line 15: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];
b=c[1];

Line 16: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(a);

Line 16: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];
b=c[1];
println(a);

Line 17: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(b);

Line 17: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];
b=c[1];
println(a);
println(b);

Line 18: compound_statement : LCURL statements RCURL

{
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];
b=c[1];
println(a);
println(b);
}


ScopeTable # 1_1
 7 --> < a , ID >
 8 --> < b , ID >
 9 --> < c , ID >

ScopeTable # 1
 1 --> < main , ID >

Line 18: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];
b=c[1];
println(a);
println(b);
}


Line 18: unit : func_definition

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];
b=c[1];
println(a);
println(b);
}


Line 18: program : unit

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=20;
c[1]=10;
println(a);
println(b);
if(a&&b)c[0]++;else
c[1]=c[0];
a=c[0];
b=c[1];
println(a);
println(b);
}


Line 19: start : program

ScopeTable # 1
 1 --> < main , ID >



Total lines: 19

Total errors: 0
